plugins {
    id 'com.android.library'
    id 'maven-publish'
}

android {
    compileSdkVersion 33
    buildToolsVersion '28.0.3'
    lintOptions {
        abortOnError false
    }
    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 33
        versionCode 1
        versionName "3.0.7"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            libraryVariants.all { variant ->
                variant.outputs.all {
                    if (variant.buildType.name=="release") {
                        outputFileName = "${rootProject.name}-${android.defaultConfig.versionName}.aar"
                    }else{
                        outputFileName = "../../../../../dreamquran/dreamquran/libs/${rootProject.name}-${android.defaultConfig.versionName}.aar"
                    }

                }
            }
            matchingFallbacks = ['release']

        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    implementation 'androidx.appcompat:appcompat:1.3.0'

    implementation 'com.google.firebase:firebase-messaging:22.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'com.google.code.gson:gson:2.8.6'

    //retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
    implementation 'com.squareup.okhttp3:okhttp:3.12.12'
    implementation 'com.squareup.retrofit2:converter-jackson:2.1.0'

    // RxJava
    implementation 'io.reactivex.rxjava2:rxjava:2.2.19'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
}


publishing {
    repositories {
        maven {
            credentials {
                username localProperties["nexus.username"]
                password localProperties["nexus.password"]
            }
            // change to point to your repo, e.g. http://my.org/repo
            url = 'https://nexus.bandung.dev/repository/maven-bd/'
        }
    }
    publications {
        release(MavenPublication) {
            groupId = 'com.github.dreamfighter'
            artifactId = 'dreamlib'
            version = '1.0.64'
            artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                configurations.implementation.allDependencies.each {
                    if(it.group != null && (it.name != null || "unspecified".equals(it.name)) && it.version != null)
                    {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }

            }
        }
    }
}